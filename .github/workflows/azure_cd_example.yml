name: MLOPs with Databricks example

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - 'main'
  #   tags:
  #     - '[0-9]+.[0-9]+.[0-9]+'

permissions: # needed for federated credentials
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}

jobs:
  setup-validate:
    name: Set Up Environment
    runs-on: ubuntu-latest
    environment: dev # github environment

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ env.GIT_BRANCH }}

      - name: Set Up Python
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa
        with:
          python-version: 3.11

      - name: Install UV
        uses: astral-sh/setup-uv@2e657c127d5b1635d5a8e3fa40e0ac50a5bf6992

      - name: Install Databricks CLI
        uses: databricks/setup-cli@948d7379a31615a4c8e9ccbbc5445a12d6b32736
        with:
          version: 0.221.1

      - name: AZ CLI login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302
        with:
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ env.AZURE_CLIENT_ID }}
          enable-AzPSSession: false #enable powershell false

      - name: Set Databricks Token
        run: echo "DATABRICKS_TOKEN=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d | jq .accessToken --raw-output)" >> $GITHUB_ENV

      - name: Deploy to Databricks
        env:
          DATABRICKS_BUNDLE_ENV: dev # bundle target
        run: databricks bundle deploy --var="git_sha=${{ github.sha }}"
